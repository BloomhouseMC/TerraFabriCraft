plugins {
	id 'fabric-loom' version '0.10.21'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	//CCA
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	//GECKOLIB
	maven {
		name = 'GeckoLib'
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	//REI
	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me"
		content {
			includeGroupByRegex "dev\\.architectury.*"
			includeGroupByRegex "me\\.shedaniel.*"
			includeGroupByRegex "me\\.sargunvohra.*"
		}
	}
	//PATCHOULI
	maven {
		name "patchouli"
		url "https://maven.blamejared.com"
	}
	//JITPACK
	maven {
		name "jitpack"
		url "https://jitpack.io"
	}

	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
		content {
			includeGroup "alexiil.mc.lib"
		}
	}
	maven { url = 'https://server.bbkr.space/artifactory/libs-release'
		content {
			includeGroup 'io.github.cottonmc'
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//CCA
	modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cc_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cc_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cc_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cc_version}"

	//Geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${gecko_version}"

	//Patchouli
	modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}"

	//REI
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

	modImplementation include("io.github.cottonmc:LibGui:4.1.6+1.17.1")

}

loom {
	accessWidenerPath = file("src/main/resources/terrafabricraft.aw")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
